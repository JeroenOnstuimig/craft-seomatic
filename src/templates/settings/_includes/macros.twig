{% macro configWarning(setting, file) -%}
    {%- set configArray = craft.app.config.getConfigFromFile(file) -%}
    {%- if configArray[setting] is defined -%}
        {{- "This is being overridden by the `#{setting}` setting in the `config/#{file}.php` file." |raw }}
    {%- else -%}
        {{ false }}
    {%- endif -%}
{%- endmacro %}

{% macro seoImageTransformModeField(field, imageCropModes, metaBundleSettings) %}
    <div class="heading">
        <label for="metaBundleSettings-seoImageTransformMode">
            {{ "SEO Image Transform Mode"|t("seomatic") }}
        </label>
    </div>
    <div class="instructions">
        <p>{{ "The transform mode to use for the SEO Image Transform."|t("seomatic") }}</p>
    </div>
    {% import "_includes/forms" as forms %}

    <div class="field" {% if field is not null and 'seoImageTransformMode' not in field.generalEnabledFields %}style="display: none;"{% endif %}>
        {% namespace "metaBundleSettings" %}
            {{ forms.selectField({
                id: "seoImageTransformMode",
                name: "seoImageTransformMode",
                options: imageCropModes,
                value: metaBundleSettings.seoImageTransformMode,
                warning: false,
                errors: metaBundleSettings.getErrors("seoImageTransformMode"),
            }) }}
        {% endnamespace %}
    </div>
{% endmacro %}

{% macro seoImageTransformField(field, metaBundleSettings) %}
    {% import "_includes/forms" as forms %}

    <div class="field" {% if field is not null and 'seoImageTransform' not in field.generalEnabledFields %}style="display: none;"{% endif %}>
        <div class="heading">
            <label for="metaBundleSettings-seoImageTransform">
                {{ "Transform SEO Image"|t("seomatic") }}
            </label>
        </div>
        {% namespace "metaBundleSettings" %}
            {{ forms.lightswitchField({
                id: "seoImageTransform",
                name: "seoImageTransform",
                instructions: "Whether the SEO image should be automatically transformed to an appropriate file format and aspect ratio."|t("seomatic"),
                class: "",
                on: metaBundleSettings.seoImageTransform,
                warning: false,
                errors: metaBundleSettings.getErrors("seoImageTransform"),
            }) }}
        {% endnamespace %}
    </div>
{% endmacro %}

{% macro seoImageField(seoImageElement, elementType, imageOptions, assetFieldSources, metaBundleSettings, metaGlobalVars) %}
    <div class="instructions">
        <p>{{ "This is the image that will be used for display as the global website brand, as well as on Twitter Cards and Facebook OpenGraph that link to the website, if they are not specified."|t("seomatic") }}</p>
    </div>
    {% import "_includes/forms" as forms %}

    {% namespace "metaBundleSettings" %}
        <div class="heading">
            {{ forms.select({
                id: "seoImageSource",
                name: "seoImageSource",
                options: imageOptions,
                value: metaBundleSettings.seoImageSource,
                class: "seomatic-imageSourceSelect",
                errors: metaBundleSettings.getErrors("seoImageSource"),
            }) }}
        </div>
    {% endnamespace %}

    {% if assetFieldSources is defined and assetFieldSources |length %}
        {% namespace "metaBundleSettings" %}
            <div class="heading seomatic-imageSourceFromField">
                <label id="metaBundleSettings-seoImageField-label" for="metaBundleSettings-seoImageField">{{ "Source Field: "|t("seomatic") }}</label>
                {{ forms.select({
                    id: "seoImageField",
                    name: "seoImageField",
                    options: assetFieldSources,
                    value: metaBundleSettings.seoImageField,
                    errors: metaBundleSettings.getErrors("seoImageField"),
                }) }}
            </div>
        {% endnamespace %}
    {% endif %}

    {% namespace "metaBundleSettings" %}
        <div class="heading seomatic-imageSourceFromAsset">
            {{ forms.elementSelect({
                id: "seoImageIds-" ~ metaBundleSettings.getHash(),
                name: "seoImageIds",
                viewMode: "large",
                elements: seoImageElement,
                elementType: elementType,
                criteria: {
                    kind: ["image"],
                },
                jsClass: 'Craft.AssetSelectInput',
                selectionLabel: "Select SEO Image"|t("seomatic"),
                sources: [],
                limit: 1,
                warning: false,
                errors: metaBundleSettings.getErrors("seoImageIds"),
            }) }}
        </div>
    {% endnamespace %}

    {% namespace "metaGlobalVars" %}
        <div class="heading seomatic-imageSourceFromUrl">
            {{ forms.text({
                id: "seoImage",
                name: "seoImage",
                value: metaGlobalVars.seoImage,
                class: "nicetext",
                warning: false,
                errors: metaBundleSettings.getErrors("seoImage"),
            }) }}
        </div>
    {% endnamespace %}
{% endmacro %}
