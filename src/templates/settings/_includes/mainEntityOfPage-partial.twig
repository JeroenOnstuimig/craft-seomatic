{% from "seomatic/settings/_includes/macros.twig" import configWarning %}
{% import "_includes/forms" as forms %}

<div class="field">
    <div class="heading">
        <label for="siteType">{{ mainEntityTitle|t("seomatic")}}</label>
        <div class="instructions"><p>{{ mainEntityDescription ~ " Choose as general or specific of an type as you wish.  Leave a sub-type blank if you don't want to specify a sub-type." |t("seomatic") |raw}}</p></div>
        <div id="treeselect-wrapper">
            <schema-type-list entity="{{ entitySchemaPath }}"></schema-type-list>
        </div>
    </div>
    {% set mainEntityOfPageRootOptions = seomatic.helper.getSingleTypeMenu('') %}
    {% if pageContext is defined and (pageContext == "field" or pageContext == "content") %}
        {% set mainEntityOfPageRootOptions = { "": ""} | merge(mainEntityOfPageRootOptions) %}
    {% endif %}
    <div style="display: none;">
        <div class="inline-item">
            {{ forms.textField({
                id: "siteType",
                class: "inline-item",
                fieldClass: "inline-item",
                name: "siteType",
                value: mainEntityOfPage.siteType,
                required: true,
                errors: mainEntityOfPage.getErrors("siteType"),
            }) }}
        </div>
        <div class="inline-item">
            {{ forms.textField({
                id: "siteSubType",
                label: "&rarr;",
                class: "inline-item",
                fieldClass: "inline-item",
                name: "siteSubType",
                value: mainEntityOfPage.siteSubType,
                required: false,
                errors: mainEntityOfPage.getErrors("siteSubType"),
            }) }}
        </div>
        <div class="inline-item">
            {{ forms.textField({
                id: "siteSpecificType",
                label: "&rarr;",
                class: "inline-item",
                fieldClass: "inline-item",
                name: "siteSpecificType",
                value: mainEntityOfPage.siteSpecificType,
                required: false,
                errors: mainEntityOfPage.getErrors("siteSpecificType"),
            }) }}
        </div>
        <div class="inline-item">
            <div class="inline-item inline-item-padding seomaticSchemaInfo">
            </div>
        </div>
    </div>
</div>

    {% js %}
        window.schemaSelectId = '{{ "treeselect-wrapper" |namespaceInputId }}';
        $(document).on('schema-value-changed', function(e, v) {
        var siteTypeId = '{{ "siteType" |namespaceInputId }}';
        var siteSubTypeId = '{{ "siteSubType" |namespaceInputId }}';
        var siteSpecificTypeId = '{{ "siteSpecificType" |namespaceInputId }}';
        let parts = [];
        if (v !== undefined) {
            parts = v.split('.');
        }
        $('#'+siteTypeId).val(parts[0] || 'none');
        $('#'+siteSubTypeId).val(parts[1] || 'none');
        $('#'+siteSpecificTypeId).val(parts[2] || 'none');
        });

    {% endjs %}
{% js %}
    // Fill in the dynamic schema menus
    var siteTypeId = '{{ "siteType" |namespaceInputId }}';
    var siteSubTypeId = '{{ "siteSubType" |namespaceInputId }}';
    var siteSpecificTypeId = '{{ "siteSpecificType" |namespaceInputId }}';

    // Initially hide all of the meta panes
    $('.metaPane').hide();
    $('.metaSubPane').hide();
    $('.metaSpecificPane').hide();

    // Show any panes that should be visible based on the chosen type
    {% if mainEntityOfPage.siteType |length %}
        $('.metaPane.{{ mainEntityOfPage.siteType }}').show();
    {% endif %}
    {% if mainEntityOfPage.siteSubType |length %}
        $('.metaSubPane.{{ mainEntityOfPage.siteSubType }}').show();
    {% endif %}
    {% if mainEntityOfPage.siteSpecificType |length %}
        $('.metaSpecificPane.{{ mainEntityOfPage.siteSpecificType }}').show();
    {% endif %}

    // Hide the sub-type menus as appropriate
    if ($('#' + siteSubTypeId + ' option').length <= 1) {
        $('#'+siteSubTypeId).val('none');
    }
    if ($('#' + siteSpecificTypeId + ' option').length <= 1) {
        $('#'+siteSpecificTypeId).val('none');
    }

    // Handle clicks on the siteType schema menu
    $('#'+siteTypeId).on('change', function(e) {
        var path = $('#'+siteTypeId).val();
        var value = $('#'+siteTypeId).val();
        $('.metaPane').hide();
        $('.metaPane.' + value).show();
        $('#'+siteSpecificTypeId).val('none');
    });

    // Handle clicks on the siteSubType schema menu
    $('#'+siteSubTypeId).on('change', function(e) {
        var path = $('#'+siteTypeId).val() + '.' + $('#'+siteSubTypeId).val();
        var value = $('#'+siteSubTypeId).val();
        $('.metaSubPane').hide();
        $('.metaSubPane.' + value).show();
    });

    // Handle clicks on the siteSpecificType schema menu
    $('#'+siteSpecificTypeId).on('change', function(e) {
        var value = $('#'+siteSpecificTypeId).val();
        $('.metaSpecificPane').hide();
        $('.metaSpecificPane.' + value).show();
    });
{% endjs %}
